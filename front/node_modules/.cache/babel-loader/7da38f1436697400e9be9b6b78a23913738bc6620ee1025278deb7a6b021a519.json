{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  post: {\n    title: \"\",\n    description: \"\",\n    coverImg: \"\",\n    content: \"\",\n    createdBy: \"\"\n  },\n  loading: false,\n  error: \"\"\n};\nexport const fetchPostDetails = createAsyncThunk(\"type/fetchData\", async _id => {\n  try {\n    const response = await axios.get(`http://localhost:8080/api/v1/blogs/${_id}`);\n    return response.data.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postListSlice = createSlice({\n  name: \"PostList\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchPostDetails.pending]: state => {\n      state.loading = true;\n    },\n    [fetchPostDetails.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.loading = false;\n      state.post = payload;\n    },\n    [fetchPostDetails.rejected]: (state, _ref2) => {\n      let {\n        error\n      } = _ref2;\n      state.loading = false;\n      state.error = error;\n    }\n  }\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","post","title","description","coverImg","content","createdBy","loading","error","fetchPostDetails","_id","response","get","data","console","log","postListSlice","name","reducers","extraReducers","pending","state","fulfilled","_ref","payload","rejected","_ref2"],"sources":["/Users/takiacademy/Desktop/blog/front/src/data/slices/GetPostDetails.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Post } from \"./GetPostsSlice\";\n\ninterface PostDetailsState {\n  post: Post;\n  loading: boolean;\n  error: string;\n}\n\nconst initialState: PostDetailsState = {\n  post: {\n    title: \"\",\n    description: \"\",\n    coverImg: \"\",\n    content: \"\",\n    createdBy: \"\",\n  },\n  loading: false,\n  error: \"\",\n};\n\nexport const fetchPostDetails: any = createAsyncThunk(\n  \"type/fetchData\",\n  async (_id) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8080/api/v1/blogs/${_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const postListSlice = createSlice({\n  name: \"PostList\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchPostDetails.pending]: (state) => {\n      state.loading = true;\n    },\n\n    [fetchPostDetails.fulfilled]: (state, { payload }) => {\n      state.loading = false;\n      state.post = payload;\n    },\n\n    [fetchPostDetails.rejected]: (state, { error }) => {\n      state.loading = false;\n      state.error = error;\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AASzB,MAAMC,YAA8B,GAAG;EACrCC,IAAI,EAAE;IACJC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE;EACb,CAAC;EACDC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,gBAAqB,GAAGX,gBAAgB,CACnD,gBAAgB,EAChB,MAAOY,GAAG,IAAK;EACb,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC7B,sCAAqCF,GAAI,EAC5C,CAAC;IACD,OAAOC,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;EACpB;AACF,CACF,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAGnB,WAAW,CAAC;EACvCoB,IAAI,EAAE,UAAU;EAChBjB,YAAY;EACZkB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAACV,gBAAgB,CAACW,OAAO,GAAIC,KAAK,IAAK;MACrCA,KAAK,CAACd,OAAO,GAAG,IAAI;IACtB,CAAC;IAED,CAACE,gBAAgB,CAACa,SAAS,GAAG,CAACD,KAAK,EAAAE,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MAC/CF,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACpB,IAAI,GAAGuB,OAAO;IACtB,CAAC;IAED,CAACf,gBAAgB,CAACgB,QAAQ,GAAG,CAACJ,KAAK,EAAAK,KAAA,KAAgB;MAAA,IAAd;QAAElB;MAAM,CAAC,GAAAkB,KAAA;MAC5CL,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACb,KAAK,GAAGA,KAAK;IACrB;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}